apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pritunl.fullname" . }}
  labels:
    {{- include "pritunl.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pritunl.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pritunl.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pritunl.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-config
          image: alpine
          command: ["sh", "-c", "cp -v /configmap/pritunl.conf /opt/pritunl/etc/"]
          volumeMounts:
            - name: conf
              mountPath: /opt/pritunl/etc
            - name: configmap
              mountPath: /configmap
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $k, $v := .Values.pritunl.env }}
          {{- if $v }}
          - name: {{ $k }}
            value: {{ $v }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: vpn
              containerPort: 1194
              protocol: UDP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: conf
              mountPath: /opt/pritunl/etc
            {{- if .Values.pritunl.logs.emptyDir }}
            - name: log
              mountPath: /var/log
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: configmap
          configMap:
            name: {{ include "pritunl.fullname" . }}
        - name: conf
          emptyDir: {}
        {{- if .Values.pritunl.logs.emptyDir }}
        - name: log
          emptyDir: {}
        {{- end }}
